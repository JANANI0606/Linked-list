Linked List : Search

 
  
Write a Java program to find whether an element is present in the linked list.

Create a class named LinkedList and include the following methods

Method Name	Description
void addNode(int data)	This method takes the data to be appended in the linked list and adds the given data at the end of the linked list.
void display()	This method displays the contents of the linked  list.
int search(int element)	This method to search for an element in the linked list. The function returns 1 if the element is present in the linked list and 0 otherwise.
 
Input and Output Format:
Refer sample input and output for formatting specifications.

 [All text in bold corresponds to input and the rest corresponds to output.]

Sample Input and Output 1:

Enter the value
5
Do you want to add another node? Type Yes/No
Yes
Enter the value
9
Do you want to add another node? Type Yes/No
Yes
Enter the value
2
Do you want to add another node? Type Yes/No
Yes
Enter the value
8
Do you want to add another node? Type Yes/No
No
The elements in the linked list are 5 9 2 8
Enter the element to be searched
2
2 is present in the linked list
 
Sample Input and Output 2:

Enter the value
5
Do you want to add another node? Type Yes/No
Yes
Enter the value
9
Do you want to add another node? Type Yes/No
Yes
Enter the value
2
Do you want to add another node? Type Yes/No
Yes
Enter the value
8
Do you want to add another node? Type Yes/No
No
The elements in the linked list are 5 9 2 8
Enter the element to be searched
12
12 is not present in the linked list





LinkedList.java:
import java.util.*;
class Node{
	int data;
	Node next;
	Node(int data){
		this.data=data;
	}
}
public class LinkedList{

	/* fill your code here */

	Node head,tail;
    	public void addNode(int data) {
        /* Fill your code here */
		Node n=new Node(data);
		if(head==null){
			head=n;
			tail=n;
		}else{
			tail.next=n;
			tail=n;
		}
	}

	public void display(){
	/* fill your code here */
	Node temp=head;
		if(head==null){
			System.out.println("List is empty");
		} else{
			while(temp!=null){
				System.out.print(" "+temp.data);
				temp=temp.next;
			}
		}
	}

	public int search(int element)
	{
	/* Fill your code here */
	
	Node temp=head;
		if(head==null){
			System.out.println("List is empty");
		} else{
			while(temp!=null){
				if(temp.data==element){
					return 1;
				}
				temp=temp.next;
			}
		
		}
            	return 0;
	}
}




Main.java:
import java.util.*;
public class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String ch="";
        LinkedList list = new LinkedList();
        do{
        System.out.println("Enter the value");
        int n = sc.nextInt();
        sc.nextLine();
        //Fill your code here
        list.addNode(n);
        System.out.println("Do you want to add another node? Type Yes/No");
        ch = sc.nextLine();
        }while(ch.equals("Yes")); 

        //Fill your code here
        System.out.print("the elements in the linked list are ");
        list.display();
        System.out.print("\n");

	System.out.println("Enter the element to be searched"); 
	int element = sc.nextInt();
	//Fill your code here
    int c=list.search(element);
    if(c==1){
        System.out.print(element+"  is present in the linked list");
    }
    if(c==0){
        System.out.print(element+"  is not present in the linked list");
    }
	}
}
